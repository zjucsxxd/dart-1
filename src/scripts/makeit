#!/bin/bash
# To make a bash script executable, do:
# ~$ chmod +x <script_name>
# And then just execute it like ./<script_name>
# Script written by Constantine M. Apostolou

export TOOLCHAIN=./toolchain/bin
export SOURCE=./src
export OBJS=./objs
export INCLUDE=${SOURCE}/include

mkdir -p ${OBJS}

echo "Compilation started"
sleep 0.5

echo "  Compiling Assembly code"
echo "  --> start.asm"
${TOOLCHAIN}/nasm -felf -o ${OBJS}/loader.o ${SOURCE}/arch/x86/boot/start.asm
echo "  --> gdt.s"
${TOOLCHAIN}/nasm -felf -o ${OBJS}/gdt.o ${SOURCE}/arch/x86/gdt.s
echo "  --> interrupt.s"
${TOOLCHAIN}/nasm -felf -o ${OBJS}/interrupt.o ${SOURCE}/arch/x86/interrupt.s
echo "  --> process.s"
${TOOLCHAIN}/nasm -felf -o ${OBJS}/process.o ${SOURCE}/arch/x86/process.s
echo "  Done."

echo "  Compiling C code"
echo "  --> main.c"
${TOOLCHAIN}/i386-elf-gcc -o ${OBJS}/kernel.o -c ${SOURCE}/main.c -I${INCLUDE} -nostdlib -nostdinc -fno-builtin

echo "  --> port/outb.c"
${TOOLCHAIN}/i386-elf-gcc -o ${OBJS}/outb.o -c ${SOURCE}/arch/x86/port/outb.c -I${INCLUDE} -nostdlib -nostdinc -fno-builtin

echo "  --> port/inpb.c"
${TOOLCHAIN}/i386-elf-gcc -o ${OBJS}/inpb.o -c ${SOURCE}/arch/x86/port/inpb.c -I${INCLUDE} -nostdlib -nostdinc -fno-builtin

echo "  --> port/inpw.c"
${TOOLCHAIN}/i386-elf-gcc -o ${OBJS}/inpw.o -c ${SOURCE}/arch/x86/port/inpw.c -I${INCLUDE} -nostdlib -nostdinc -fno-builtin

echo "  --> screen/screen.c"
${TOOLCHAIN}/i386-elf-gcc -o ${OBJS}/screen.o -c ${SOURCE}/screen/screen.c -I${INCLUDE} -nostdlib -nostdinc -fno-builtin

echo "  --> screen/ctype.c"
${TOOLCHAIN}/i386-elf-gcc -o ${OBJS}/ctype.o -c ${SOURCE}/screen/ctype.c -I${INCLUDE} -nostdlib -nostdinc -fno-builtin

echo "  --> screen/printf.c"
${TOOLCHAIN}/i386-elf-gcc -o ${OBJS}/printf.o -c ${SOURCE}/screen/printf.c -I${INCLUDE} -nostdlib -nostdinc -fno-builtin

echo "  --> screen/stdio.c"
${TOOLCHAIN}/i386-elf-gcc -o ${OBJS}/stdio.o -c ${SOURCE}/screen/stdio.c -I${INCLUDE} -nostdlib -nostdinc -fno-builtin

echo "  --> screen/stdlib.c"
${TOOLCHAIN}/i386-elf-gcc -o ${OBJS}/stdlib.o -c ${SOURCE}/screen/stdlib.c -I${INCLUDE} -nostdlib -nostdinc -fno-builtin

echo "  --> screen/string.c"
${TOOLCHAIN}/i386-elf-gcc -o ${OBJS}/string.o -c ${SOURCE}/screen/string.c -I${INCLUDE} -nostdlib -nostdinc -fno-builtin

echo "  --> string/strlen.c"
${TOOLCHAIN}/i386-elf-gcc -o ${OBJS}/strlen.o -c ${SOURCE}/string/strlen.c -I${INCLUDE} -nostdlib -nostdinc -fno-builtin

echo "  --> string/strcpy.c"
${TOOLCHAIN}/i386-elf-gcc -o ${OBJS}/strcpy.o -c ${SOURCE}/string/strcpy.c -I${INCLUDE} -nostdlib -nostdinc -fno-builtin

echo "  --> string/strcmp.c"
${TOOLCHAIN}/i386-elf-gcc -o ${OBJS}/strcmp.o -c ${SOURCE}/string/strcmp.c -I${INCLUDE} -nostdlib -nostdinc -fno-builtin

echo "  --> string/strcat.c"
${TOOLCHAIN}/i386-elf-gcc -o ${OBJS}/strcat.o -c ${SOURCE}/string/strcat.c -I${INCLUDE} -nostdlib -nostdinc -fno-builtin

echo "  --> string/memset.c"
${TOOLCHAIN}/i386-elf-gcc -o ${OBJS}/memset.o -c ${SOURCE}/string/memset.c -I${INCLUDE} -nostdlib -nostdinc -fno-builtin

echo "  --> string/memcpy.c"
${TOOLCHAIN}/i386-elf-gcc -o ${OBJS}/memcpy.o -c ${SOURCE}/string/memcpy.c -I${INCLUDE} -nostdlib -nostdinc -fno-builtin
# TODO: Put the rest of the modules that need to be 
#       be compiled here.
echo "  Done."
echo "Done."

echo "Linking the object code"
${TOOLCHAIN}/i386-elf-ld -T ${SOURCE}/linker.ld -o kernel-i386 ${OBJS}/loader.o ${OBJS}/kernel.o ${OBJS}/screen.o ${OBJS}/inpb.o ${OBJS}/inpw.o ${OBJS}/outb.o ${OBJS}/string.o ${OBJS}/stdlib.o ${OBJS}/ctype.o ${OBJS}/stdio.o \
${OBJS}/strcpy.o ${OBJS}/strlen.o ${OBJS}/strcmp.o ${OBJS}/strcat.o ${OBJS}/memset.o ${OBJS}/memcpy.o
echo "Done."
